name: Scan Actions Repositories

on:
  workflow_dispatch:

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - run: npm install
      - name: Run Scans
        shell: bash +x {0}
        env:
          GH_TOKEN: ${{ secrets.ORG_TOKEN }}
        run: |
          node scan-repos.js -t ${{ secrets.ORG_TOKEN }} -o ${{ github.repository_owner }} | 
            jq -c '.[]' | 
            while read i; do 
              # Set json object as bash variables
              eval $(echo $i | jq -r '. | to_entries | .[] | .key + "=" + (.value | @sh)')

              if [[ $scanning_enabled != true || $scanning_workflow != true || $all_alerts_closed != true ]]; then
                if [[ -z "$description" ]]; then
                  echo "Description is empty, can't sync upstream to $name"
                else
                  git clone https://${{ secrets.ORG_TOKEN }}@github.com/${{ github.repository_owner }}/$name.git
                  cd $name
                  curl https://raw.githubusercontent.com/repo-sync/github-sync/3832fe8e2be32372e1b3970bbae8e7079edeec88/github-sync.sh > github-sync.sh

                  GITHUB_TOKEN="${{ secrets.ORG_TOKEN }}" GITHUB_REPOSITORY="${{ github.repository_owner }}/$name" bash github-sync.sh $description "$default_branch:$default_branch-sync"
                  
                  # Get common ancestor
                  COMMON_ANCESTOR=$(git merge-base remotes/origin/$default_branch-sync HEAD)
                  # Get head of sync branch
                  SYNC_HEAD=$(git show-ref remotes/origin/$default_branch-sync -s)
                  # Open a PR if there is stuff to merge
                  if [[ $COMMON_ANCESTOR != $SYNC_HEAD ]]; then
                    
                    # Find Admin Team
                    TEAMS_WITH_MEMBERS=()
                    ADMIN_TEAMS=$(gh api /repos/chocrates-test-org/go-dependency-submission/teams | jq -c '.[] | select(.permission == "admin")');
                    IFS=$'\n'
                    for CURRENT_TEAM in $ADMIN_TEAMS; do                                                                                                                                                                                                  
                      CURRENT_TEAM_MEMBERS=$(GH_PAGER='' gh api $(echo $CURRENT_TEAM | jq '.members_url' | sed 's/"\(.*\){\/member}"/\1/'))
                      if [[ $(echo $CURRENT_TEAM_MEMBERS | jq '. | length') -gt 0 ]]; then
                        echo "Current Team: $CURRENT_TEAM"
                        TEAMS_WITH_MEMBERS+=($CURRENT_TEAM)
                      else
                        echo "Team $(echo $CURRENT_TEAM | jq '.name') doesn't have members"
                      fi
                    done
                    
                    echo "Teams with Members $TEAMS_WITH_MEMBERS"

                    gh pr --repo "${{ github.repository_owner }}/$name" create --title "Merge Upstream" \
                      --body "This repository is non-compliant.  This PR has been automatically generated to help you merge Upstream in hopes that it helps come in to compliance" \
                      --base $default_branch --head "$default_branch-sync" \
                      --reviewer @chocrates-test-org/one
                      
                  else
                    echo "Common ancestor matches upstream so nothing to merge"
                  fi
                  
                  # node notify-non-compliance -t ${{ secrets.ORG_TOKEN }} -o ${{ github.repository_owner }} -r $name
                  cd ..
                  rm -rf $name
                fi
              else
                echo "don't nag"
              fi
            done
            
